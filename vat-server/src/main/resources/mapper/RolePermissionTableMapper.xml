<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mc.vat.mapper.RolePermissionTableMapper">
  <resultMap id="RolePermMap" type="com.mc.vat.entity.RolePermissionTable">
    <id column="rpt_id" jdbcType="INTEGER" property="rptId" />
    <result column="rpt_role_id" jdbcType="INTEGER" property="rptRoleId" />
    <result column="rpt_perm_id" jdbcType="INTEGER" property="rptPermId" />
    <result column="rpt_enabled" jdbcType="CHAR" property="rptEnabled" />
    <result column="rpt_create_by" jdbcType="VARCHAR" property="rptCreateBy" />
    <result column="rpt_create_time" jdbcType="TIMESTAMP" property="rptCreateTime" />
    <result column="rpt_update_by" jdbcType="VARCHAR" property="rptUpdateBy" />
    <result column="rpt_update_time" jdbcType="TIMESTAMP" property="rptUpdateTime" />
    <result column="rpt_version" jdbcType="INTEGER" property="rptVersion" />
  </resultMap>

  <resultMap id="PageData" type="com.mc.vat.entity.page.RolePageResp">
    <id column="rpt_id" property="rptId" />
    <result column="rpt_role_id" property="roleId" />
    <result column="ri_role_code" property="roleCode" />
    <result column="ri_role_desc" property="roleDesc" />
    <result column="rpt_perm_id" property="permId" />
    <result column="pi_perm_code" property="permCode" />
    <result column="pi_perm_desc" property="permDesc" />
  </resultMap>

  <sql id="Base_Column_List">
    rpt_id, rpt_role_id, rpt_perm_id, rpt_enabled, rpt_create_by, rpt_create_time, rpt_update_by,
    rpt_update_time, rpt_version
  </sql>

  <select id="selectRolePermInfoByRoleId" resultMap="PageData">
    select rpt.rpt_id,
           rpt.rpt_role_id,ri.ri_role_code,ri.ri_role_desc,
           rpt.rpt_perm_id,pi.pi_perm_code,pi.pi_perm_desc
    from (
    select rpt_id,rpt_role_id,rpt_perm_id
    from role_permission_table
    <where>
      <if test = "roleId != null and roleId != ''">
        rpt_role_id = #{roleId}
      </if>
    </where>
    ) rpt
    left join role_info ri
    on rpt.rpt_role_id = ri.ri_role_id
    left join permission_info pi
    on rpt.rpt_perm_id = pi.pi_perm_id
  </select>

  <select id="selectPermIdsByRoleIds" resultType="java.lang.Integer">
    select rpt_perm_id
    from role_permission_table
    <where>
      <if test = "roleIds != null and roleIds.size != 0">
        and rpt_role_id in
        <foreach collection="roleIds" item="roleId" index="index" open="(" close=")" separator=",">
          #{roleId}
        </foreach>
      </if>
    </where>
  </select>

  <select id="selectPermIdsByRoleId" resultType="java.lang.Integer">
    select rpt.rpt_perm_id
    from (
         select rpt_role_id,rpt_perm_id
         from role_permission_table
         where rpt_role_id = #{roleId}
           ) rpt
    left join permission_info pi
    on rpt.rpt_perm_id = pi.pi_perm_id
    <where>
      <if test = "includeParent == false">
        pi.pi_parent_id != 0
      </if>
    </where>
  </select>

  <select id="selectRoleIdsByPermId" resultType="java.lang.Integer">
    select rpt_role_id from role_permission_table
    where rpt_perm_id = #{permId}
  </select>

  <insert id="saveRolePerm" parameterType="com.mc.vat.entity.RolePermissionTable"  keyProperty="rptId" useGeneratedKeys="true">
    insert into role_permission_table(
      rpt_role_id, rpt_perm_id, rpt_enabled, rpt_create_by
    )
    values (
             #{rptRoleId}, #{rptPermId}, #{rptEnabled}, #{rptCreateBy}
           )
  </insert>

  <delete id="deleteRolePerm">
    delete from role_permission_table
    where rpt_role_id = #{roleId} and rpt_perm_id = #{permId}
  </delete>

  <select id="selectByRoleIdAndPermId" resultType="com.mc.vat.entity.RolePermissionTable">
    select <include refid="Base_Column_List" />
    from role_permission_table
    where rpt_role_id = #{roleId} and rpt_perm_id = #{permId}
  </select>

</mapper>
